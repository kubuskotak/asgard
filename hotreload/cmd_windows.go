// Package hotreload is func library that implement reload service on development stage.
// # This manifest was generated by ymir. DO NOT EDIT.
package hotreload

import (
	"fmt"
	"io"
	"os/exec"
	"strconv"
)

func (*worker) execCmd(command string, options ...string) (
	*exec.Cmd, io.ReadCloser, io.ReadCloser, error) {
	var err error
	// Checking for nil.
	if command == "" || options == nil {
		return nil, nil, nil, fmt.Errorf("no command to execute")
	}

	// Collect command line.
	var args = append([]string{"/c", command}, options...)
	cmd := exec.Command("cmd", args...) // #nosec G204
	stdOut, err := cmd.StdoutPipe()
	if err != nil {
		return nil, nil, nil, err
	}
	stdErr, err := cmd.StderrPipe()
	if err != nil {
		return nil, nil, nil, err
	}
	if err = cmd.Start(); err != nil {
		return nil, nil, nil, err
	}
	return cmd, stdOut, stdErr, err
}

func (*worker) killCmd(cmd *exec.Cmd) (pid int, err error) {
	pid = cmd.Process.Pid
	var kill = exec.Command("TASKKILL", "/T", "/F", "/PID", strconv.Itoa(pid))
	return pid, kill.Run()
}
