// Package hotreload is func library that implement reload service on development stage.
// # This manifest was generated by ymir. DO NOT EDIT.
package hotreload

import (
	"context"
	"os"

	"github.com/rs/zerolog"
)

// Options is data structure for hotreload initialize.
type Options struct {
	Dirs   []string
	Logger zerolog.Logger
}

func Start(opts Options) (func() error, error) {
	var (
		wd, _  = os.Getwd()
		l      = opts.Logger
		w, err = NewFileWatcher(opts.Dirs, l)
	)
	if err != nil {
		l.Error().Err(err).Msg("initialize hotreload is failed")
		return nil, err
	}
	w.Start(context.Background())
	go func() {
		var wr = NewWorker(wd)
		if err = wr.Run(); err != nil {
			l.Error().Err(err).Msg("+++")
			return
		}
		for event := range w.EventsCh() {
			l.Info().Strs("event:", event.Filenames).Msg("+++")
			wr.Reload()
			if err = wr.Run(); err != nil {
				l.Error().Err(err).Msg("+++")
				continue
			}
		}
	}()
	return w.Stop, err
}
